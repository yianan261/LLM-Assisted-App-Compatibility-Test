name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Decode GCP Credentials
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "$GCP_CREDENTIALS" | base64 -d > "$HOME/app-compat-test.json"

      - name: Move GCP Credentials into Workspace
        run: mv "$HOME/app-compat-test.json" "${{ github.workspace }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: chenyian261/llm-app-compat:latest
          platforms: linux/amd64, linux/arm64
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-2"
      - name: Force new deployment of ECS Service
        run: |
          aws ecs update-service --cluster llm-app-cluster2 --service llm-app-service2 --force-new-deployment

      # - name: Deploy to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy@v1
      #   with:
      #     service: llm-app-service
      #     cluster: llm-app-cluster2
      #     image: chenyian261/llm-app-compat:latest

      # - name: Build and push Docker image on EC2
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       docker build -t chenyian261/llm-app-compat:latest .
      #       echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login --username chenyian261 --password-stdin
      #       docker push chenyian261/llm-app-compat:latest

    # - name: SSH and Deploy
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.SSH_KEY }}
    #     port: ${{ secrets.PORT }}
    #     script: |
    #       docker pull chenyian261/llm-app-compat:latest
    #       docker stop django_app || true
    #       docker rm django_app || true
    #       docker run -d --name django_app -p 80:8000 chenyian261/llm-app-compat:latest
